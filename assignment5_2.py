# -*- coding: utf-8 -*-
"""Assignment5.2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18-z7DtfRjsGcN6VEtPjY76w9m0yWd5GT
"""

from google.colab import drive
drive.mount('/content/drive')

# 🔧 Install dependencies
!pip install -q gradio transformers torch pillow safetensors

# 📚 Import required modules
import gradio as gr
from transformers import BlipProcessor, BlipForConditionalGeneration
from PIL import Image
import torch

# ⚙️ Set device
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
print(f"✅ Running on device: {device}")

# 🔄 Load BLIP model and processor
processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained(
    "Salesforce/blip-image-captioning-base",
    use_safetensors=True
).to(device)

# 🧠 Inference function
def generate_caption(image):
    if image is None:
        return "Please upload an image."

    image = image.convert("RGB")
    inputs = processor(images=image, return_tensors="pt").to(device)
    output = model.generate(**inputs, max_new_tokens=30)
    caption = processor.decode(output[0], skip_special_tokens=True)
    return caption

# 🎨 Gradio Interface
interface = gr.Interface(
    fn=generate_caption,
    inputs=gr.Image(type="pil", label="Upload Image"),
    outputs=gr.Textbox(label="Generated Caption"),
    title="📸 Image Captioning with BLIP",
    description="Upload an image to get a descriptive caption using the BLIP model."
)

# 🚀 Launch the app
interface.launch(share=True)

